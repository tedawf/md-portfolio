---
import { CollectionEntry, getCollection } from "astro:content";
import filterProjects from "../utils/filterProjects";
import slugify from "../utils/slugify";

const allProjects = await getCollection("projects");
const filteredProjects: CollectionEntry<"projects">[] =
  filterProjects(allProjects);
const allCategories = filteredProjects
  .map((project) =>
    project.data.category.map((cat: string) => cat.toLowerCase())
  )
  .flat();

const processedCats = allCategories.reduce(
  (acc: { [key: string]: number }, cat) => {
    // Check if the category exists in acc
    const value = acc[cat] || 0;

    return {
      ...acc,
      [cat]: value + 1,
    };
  },
  {}
);

const { showCount } = Astro.props;
---

<div class="parent">
  <div class="cluster">
    {
      Object.entries(processedCats).map(([key, val]) => (
        <div class="cat">
          <a href={`/category/${slugify(key)}/`}>
            #{key} {showCount && `(${val})`}
          </a>
        </div>
      ))
    }
    {
      Object.entries(processedCats).map(([key, val]) => (
        <div class="cat">
          <a href={`/category/${slugify(key)}/`}>
            #{key} {showCount && `(${val})`}
          </a>
        </div>
      ))
    }
    {
      Object.entries(processedCats).map(([key, val]) => (
        <div class="cat">
          <a href={`/category/${slugify(key)}/`}>
            #{key} {showCount && `(${val})`}
          </a>
        </div>
      ))
    }
  </div>
</div>
