---
import { CollectionEntry, getCollection } from "astro:content";
import filterProjects from "../utils/filterProjects";
import slugify from "../utils/slugify";
import Card from "./Card.astro";

const allProjects = await getCollection("projects");
const filteredProjects: CollectionEntry<"projects">[] =
  filterProjects(allProjects);
const allCategories = filteredProjects
  .map((project) =>
    project.data.category.map((cat: string) => cat.toLowerCase())
  )
  .flat();

const processedCats = allCategories.reduce(
  (acc: { [key: string]: number }, cat) => {
    // Check if the category exists in acc
    const value = acc[cat] || 0;

    return {
      ...acc,
      [cat]: value + 1,
    };
  },
  {}
);

const sortedCats = Object.keys(processedCats)
  .sort()
  .reduce((obj: any, key: any) => {
    obj[key] = processedCats[key];
    return obj;
  }, {});

const { showCount, filter } = Astro.props;
---

<div
  class="flex max-w-xl flex-wrap justify-center gap-x-2 gap-y-3 sm:max-w-2xl lg:max-w-3xl"
>
  {
    Object.entries(sortedCats).map(([key, val]) => {
      if (key !== filter) {
        return (
          <Card href={`/category/${slugify(key)}`} classes="px-2 pt-1 pb-1.5">
            {key} {showCount && ` (${val})`}
          </Card>
        );
      }
    })
  }
  {
    Object.entries(sortedCats).map(([key, val]) => {
      if (key !== filter) {
        return (
          <Card href={`/category/${slugify(key)}`} classes="px-2 pt-1 pb-1.5">
            {key} {showCount && ` (${val})`}
          </Card>
        );
      }
    })
  }
  {
    Object.entries(sortedCats).map(([key, val]) => {
      if (key !== filter) {
        return (
          <Card href={`/category/${slugify(key)}`} classes="px-2 pt-1 pb-1.5">
            {key} {showCount && ` (${val})`}
          </Card>
        );
      }
    })
  }
</div>
